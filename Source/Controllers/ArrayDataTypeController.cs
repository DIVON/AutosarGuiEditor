///////////////////////////////////////////////////////////
//  ComplexDataTypeMenu.cs
//  Implementation of the Class ComplexDataTypeMenu
//  Generated by Enterprise Architect
//  Created on:      24-мар-2019 20:54:13
//  Original author: Ivan
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Windows.Controls;
using AutosarGuiEditor.Source.Forms;
using AutosarGuiEditor.Source.Utility;
using AutosarGuiEditor.Source.SystemInterfaces;
using AutosarGuiEditor.Source.Forms.Controls;
using AutosarGuiEditor.Source.DataTypes.ArrayDataType;



namespace System 
{
	public class ArrayDataTypeController 
    {
        AllowUpdater allowUpdater = new AllowUpdater();
        
        AutosarTreeViewControl autosarTree;
        TextBox nameTextBox;
        Button  updateDataTypeButton;
        TextBox arraySizeTextBox;

        public ArrayDataTypeController(AutosarTreeViewControl autosarTree, Button updateDataTypeButton, TextBox nameTextBox, TextBox arraySizeTextBox)
        {
            this.autosarTree = autosarTree;
            this.nameTextBox = nameTextBox;
            this.updateDataTypeButton = updateDataTypeButton;
            this.arraySizeTextBox = arraySizeTextBox;

            updateDataTypeButton.Click += updateDataTypeButton_Click;
            nameTextBox.TextChanged += nameTextBox_TextChanged;
            arraySizeTextBox.TextChanged += arraySizeTextBox_TextChanged;
		}

        void arraySizeTextBox_TextChanged(object sender, TextChangedEventArgs e)
        {
            if (allowUpdater.IsUpdateAllowed)
            {
                String newSize = (sender as TextBox).Text;
                UInt16 size;
                if (UInt16.TryParse(newSize, out size))
                {
                    datatype.Size = size;
                }
            }
        }

        void updateDataTypeButton_Click(object sender, Windows.RoutedEventArgs e)
        {
            ChangeDatatypeButtonClick();
        }

        ArrayDataType datatype;
		public ArrayDataType DataType
        {
            set
            {
                datatype = value;
                allowUpdater.StopUpdate();
                nameTextBox.Text = datatype.Name;
                updateDataTypeButton.Content = datatype.DataTypeName;
                arraySizeTextBox.Text = datatype.Size.ToString();
                allowUpdater.AllowUpdate();
            }
            get
            {
                return datatype;
            }
        }
      
        public void ChangeDatatypeButtonClick()
        {
            List<IGUID> datatypes = AutosarApplication.GetInstance().GetAllDataTypes(this.datatype.Name);
            System.Windows.Forms.DialogResult result = DatatypeForm.GetInstance().ShowForm(datatypes, datatype.DataTypeGUID);
            if (result == System.Windows.Forms.DialogResult.OK)
            {
                datatype.DataTypeGUID = DatatypeForm.GetInstance().SelectedDatatype.GUID;
                updateDataTypeButton.Content = datatype.DataTypeName;
            }
        }

        void nameTextBox_TextChanged(object sender, TextChangedEventArgs e)
        {
            if (allowUpdater.IsUpdateAllowed)
            {
                String newName = (sender as TextBox).Text;
                if (NameUtils.CheckComponentName(newName))
                {
                    datatype.Name = newName;
                    autosarTree.UpdateAutosarTreeView(null);
                }
            }
        }
	}
}