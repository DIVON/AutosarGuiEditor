///////////////////////////////////////////////////////////
//  SimpleDataType.cs
//  Implementation of the Class SimpleDataType
//  Generated by Enterprise Architect
//  Created on:      24-мар-2019 20:54:12
//  Original author: Ivan
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Xml.Linq;
using AutosarGuiEditor.Source.SystemInterfaces;
using AutosarGuiEditor.Source.Utility;
using AutosarGuiEditor.Source.DataTypes;
using AutosarGuiEditor.Source.DataTypes.BaseDataType;


namespace System 
{
    public class SimpleDataType : PlainDataType
    {
        public string MaxValue;
        public string MinValue;
        public Guid BaseDataTypeGUID = Guid.Empty;

		public SimpleDataType()
        {
            
		}

		public override void LoadFromXML(XElement xml)
        {
            base.LoadFromXML(xml);
            MaxValue = xml.Element("MaxValue").Value.Replace(",", ".");
            MinValue = xml.Element("MinValue").Value.Replace(",", ".");
            String baseGuidString = XmlUtilits.GetFieldValue(xml, "BaseDataTypeGUID", "");
            BaseDataTypeGUID = GuidUtils.GetGuid(baseGuidString, false);
		}

        public override void WriteToXML(XElement root)
        {           
            XElement xmldatatype = new XElement("SimpleDataType");
            base.WriteToXML(xmldatatype);
            xmldatatype.Add(new XElement("MaxValue", MaxValue));
            xmldatatype.Add(new XElement("MinValue", MinValue));
            xmldatatype.Add(new XElement("BaseDataTypeGUID", BaseDataTypeGUID.ToString("B")));
            root.Add(xmldatatype);
		}

        public BaseDataType GetBaseDataType()
        {
            IGUID baseGuidObj = AutosarApplication.GetInstance().GetDataType(BaseDataTypeGUID);
            if (baseGuidObj != null)
            {
                return (BaseDataType)baseGuidObj;
            }
            else
            {
                return null;
            }
        }
	}

}