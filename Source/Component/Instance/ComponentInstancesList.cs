///////////////////////////////////////////////////////////
//  ComponentPainterList.cs
//  Implementation of the Class ComponentPainterList
//  Generated by Enterprise Architect
//  Created on:      24-мар-2019 20:54:10
//  Original author: Ivan
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Windows;
using System.Xml.Linq;
using System.Windows.Media.Imaging;
using AutosarGuiEditor.Source.Interfaces;
using AutosarGuiEditor.Source.Painters;

namespace System 
{
	public class ComponentInstancesList : IGuidList<ComponentInstance> 
    {
        public ComponentInstancesList()
        {

		}

        public void Unselect()
        {
            foreach (ComponentInstance componentPainter in this)
            {
                componentPainter.Unselect();
            }
        }

        public bool IsClicked(Point point, out Object clickedObject)
        {
            clickedObject = null;
            foreach (ComponentInstance component in this)
            {
                bool clicked = component.IsClicked(point, out clickedObject);
                if (clicked == true)
                {
                    return true;
                }
            }

            return false;
        }

        public void LoadFromXML(XElement xmlApp, PortableFontDesc Font)
        {
            XElement xmlList = xmlApp.Element(this.GetType().Name);
            IEnumerable<XElement> elementsList = xmlList.Elements();
            foreach (var element in elementsList)
            {
                ComponentInstance newDataType = new ComponentInstance();
                newDataType.LoadFromXML(element);
                this.Add(newDataType);
            }

            DoSort();
        }

        public override String GetName()
        {
            return "Component instances";
        }
	}
}