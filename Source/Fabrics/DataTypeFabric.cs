///////////////////////////////////////////////////////////
//  DataTypeFabric.cs
//  Implementation of the Class DataTypeFabric
//  Generated by Enterprise Architect
//  Created on:      24-мар-2019 20:54:12
//  Original author: Ivan
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using AutosarGuiEditor.Source.AutosarInterfaces;
using AutosarGuiEditor.Source.DataTypes.Enum;
using AutosarGuiEditor.Source.DataTypes.ComplexDataType;
using AutosarGuiEditor.Source.AutosarInterfaces.SenderReceiver;
using AutosarGuiEditor.Source.DataTypes.ArrayDataType;



namespace System {
	public class DataTypeFabric {

        static DataTypeFabric instance;

        public static DataTypeFabric Instance()
        {
            if (instance == null)
            {
                instance = new DataTypeFabric();
            }
            return instance;
        }

		DataTypeFabric(){

		}

		~DataTypeFabric(){

		}

		/// 
		/// <param name="Name"></param>
		public ComplexDataType CreateComplexDataType(string Name){

            ComplexDataType datatype = new ComplexDataType();
            datatype.Name = Name;
            return datatype;
		}

        public ArrayDataType CreateArrayDataType(string Name)
        {
            ArrayDataType datatype = new ArrayDataType();
            datatype.Name = Name;
            return datatype;
        }

        public EnumDataType CreateEnumDataType(string Name)
        {

            EnumDataType datatype = new EnumDataType();
            datatype.Name = Name;
            return datatype;
        }

		/// 
		/// <param name="Name"></param>
		public SimpleDataType CreateSimpleDataType(string Name){

            SimpleDataType datatype = new SimpleDataType();
            datatype.Name = Name;
            return datatype;
		}

        public SenderReceiverInterface CreateSenderReceiverInterface(string Name)
        {
            SenderReceiverInterface srinterface = new SenderReceiverInterface();
            srinterface.Name = Name;
            return srinterface;
        }

        public ClientServerInterface CreateClientServerInterface(String Name)
        {
            ClientServerInterface csInterface = new ClientServerInterface();
            csInterface.Name = Name;
            return csInterface;
        }
	}//end DataTypeFabric

}//end namespace System