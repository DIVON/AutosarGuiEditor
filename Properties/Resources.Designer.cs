//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutosarGuiEditor.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AutosarGuiEditor.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ClientPort {
            get {
                object obj = ResourceManager.GetObject("ClientPort", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Components.
        /// </summary>
        internal static string COMPONENTS_FOLDER {
            get {
                return ResourceManager.GetString("COMPONENTS_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This file contains all datatypes for programm architecture..
        /// </summary>
        internal static string DATATYPES_H_FILE_DESCRIPTION {
            get {
                return ResourceManager.GetString("DATATYPES_H_FILE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ReceiverPort {
            get {
                object obj = ResourceManager.GetObject("ReceiverPort", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rte_Connections.c.
        /// </summary>
        internal static string RTE_CONNECTIONS_C_FILENAME {
            get {
                return ResourceManager.GetString("RTE_CONNECTIONS_C_FILENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rte_DataTypes.h.
        /// </summary>
        internal static string RTE_DATATYPES_H_FILENAME {
            get {
                return ResourceManager.GetString("RTE_DATATYPES_H_FILENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RTE_E_OK.
        /// </summary>
        internal static string RTE_E_OK {
            get {
                return ResourceManager.GetString("RTE_E_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RTE_E_UNCONNECTED.
        /// </summary>
        internal static string RTE_E_UNCONNECTED {
            get {
                return ResourceManager.GetString("RTE_E_UNCONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This file will keep all links to components runnables..
        /// </summary>
        internal static string RTE_EXTERNAL_RUNNABLES_FILE_DESCRIPTION {
            get {
                return ResourceManager.GetString("RTE_EXTERNAL_RUNNABLES_FILE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rte_ExternalRunnables.h.
        /// </summary>
        internal static string RTE_EXTERNAL_RUNNABLES_H_FILENAME {
            get {
                return ResourceManager.GetString("RTE_EXTERNAL_RUNNABLES_H_FILENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RTE.
        /// </summary>
        internal static string RTE_FOLDER {
            get {
                return ResourceManager.GetString("RTE_FOLDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rte_ReturnCodes.h.
        /// </summary>
        internal static string RTE_RETURN_CODES_FILENAME {
            get {
                return ResourceManager.GetString("RTE_RETURN_CODES_FILENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RunTimeEnvironment.c.
        /// </summary>
        internal static string RTE_RUNTIME_ENVIRONMENT_C_FILENAME {
            get {
                return ResourceManager.GetString("RTE_RUNTIME_ENVIRONMENT_C_FILENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This component run all tasks with their own period.
        /// </summary>
        internal static string RTE_RUNTIME_ENVIRONMENT_FILE_DESCRIPTION {
            get {
                return ResourceManager.GetString("RTE_RUNTIME_ENVIRONMENT_FILE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RunTimeEnvironment.h.
        /// </summary>
        internal static string RTE_RUNTIME_ENVIRONMENT_H_FILENAME {
            get {
                return ResourceManager.GetString("RTE_RUNTIME_ENVIRONMENT_H_FILENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This file contains implementation for components runnables scheduler..
        /// </summary>
        internal static string RTE_SCHEDULER_C_FILE_DESCRIPTION {
            get {
                return ResourceManager.GetString("RTE_SCHEDULER_C_FILE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rte_Scheduler.c.
        /// </summary>
        internal static string RTE_SCHEDULER_C_FILENAME {
            get {
                return ResourceManager.GetString("RTE_SCHEDULER_C_FILENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rte_Scheduler.h.
        /// </summary>
        internal static string RTE_SCHEDULER_H_FILENAME {
            get {
                return ResourceManager.GetString("RTE_SCHEDULER_H_FILENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rte_Task_Scheduler.c.
        /// </summary>
        internal static string RTE_TASK_SCHEDULER_C_FILENAME {
            get {
                return ResourceManager.GetString("RTE_TASK_SCHEDULER_C_FILENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This file contains extern functions defenitions and variables for organizing task scheduling..
        /// </summary>
        internal static string RTE_TASK_SCHEDULER_FILE_DESCRIPTION {
            get {
                return ResourceManager.GetString("RTE_TASK_SCHEDULER_FILE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rte_Task_Scheduler.h.
        /// </summary>
        internal static string RTE_TASK_SCHEDULER_H_FILENAME {
            get {
                return ResourceManager.GetString("RTE_TASK_SCHEDULER_H_FILENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ServerPort {
            get {
                object obj = ResourceManager.GetObject("ServerPort", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Std_ReturnType.
        /// </summary>
        internal static string STD_RETURN_TYPE {
            get {
                return ResourceManager.GetString("STD_RETURN_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SystemErrors.h.
        /// </summary>
        internal static string SYSTEM_ERRORS_H_FILENAME {
            get {
                return ResourceManager.GetString("SYSTEM_ERRORS_H_FILENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SYSTICK_FREQUENCY.
        /// </summary>
        internal static string SYSTICK_FREQUENCY {
            get {
                return ResourceManager.GetString("SYSTICK_FREQUENCY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на uCUnit-v1.0.h.
        /// </summary>
        internal static string TEST_FRAMEWORK_H_FILENAME {
            get {
                return ResourceManager.GetString("TEST_FRAMEWORK_H_FILENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TestInitialization.c.
        /// </summary>
        internal static string TEST_INITIALIZATION_FILENAME {
            get {
                return ResourceManager.GetString("TEST_INITIALIZATION_FILENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TestRte.c.
        /// </summary>
        internal static string TEST_RTE_C_FILENAME {
            get {
                return ResourceManager.GetString("TEST_RTE_C_FILENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TestRte.h.
        /// </summary>
        internal static string TEST_RTE_H_FILENAME {
            get {
                return ResourceManager.GetString("TEST_RTE_H_FILENAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap TransmitterPort {
            get {
                object obj = ResourceManager.GetObject("TransmitterPort", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
